---
import { Icon } from 'astro-icon';
import { Picture } from '@astrojs/image/components';

interface CallToAction {
  text: string;
  href: string;
  icon?: string;
}

export interface Props {
  title?: string;
  subtitle?: string;
  callToAction?: string | CallToAction;
  callToAction2?: string | CallToAction;
  image?: string | any; // TODO: find HTMLElementProps
}

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  content = await Astro.slots.render('content'),
  callToAction = await Astro.slots.render('callToAction'),
  callToAction2 = await Astro.slots.render('callToAction2'),
  image = await Astro.slots.render('image'),
} = Astro.props;
---


<section class="relative md:-mt-[76px]">
  <div class="absolute inset-0 pointer-events-none" aria-hidden="true"></div>
  <div class="relative ">
    <div class="pointer-events-none"></div>

    <div class="">
      <div class="pt-12 md:pt-20">
        <div>
          {
            image && (
              <div class="relative">
                {typeof image === 'string' ? (
                  <Fragment set:html={image} />
                ) : (
                  <Picture
                    class="mx-auto rounded-md w-full"
                    widths={[400, 768, 1024, 2040]}
                    sizes="(max-width: 767px) 400px, (max-width: 1023px) 768px, (max-width: 2039px) 1024px, 2040px"
                    aspectRatio={1024 / 500}
                    loading="eager"
                    width={1024}
                    height={700}
                    {...image}
                  />
                )}
              </div>
            )
          }
        </div>
      </div>

 
      <div class="mt-[-7px] pb-10 md:py-16 w-full mx-auto " style="background: rgba(32, 32, 32, 1);">
        <div class="relative">
  

          <div class="flex flex-wrap-nowrap justify-around items-center max-w-2xl mx-auto gap-4">
            {
              callToAction && (
                <div class="flex w-full sm:w-auto">
                  {typeof callToAction === 'string' ? (
                    <Fragment set:html={callToAction} />
                  ) : (
                    <a href={callToAction?.href} target="_blank" rel="noopener">
                      <img
                        src="https://play.google.com/intl/en_us/badges/static/images/badges/en_badge_web_generic.png"
                        alt="Download our app from Google Play Store"
                        style="height: auto; width: 25rem;"
                      />
                    </a>
                  )}
                </div>
              )
            }
            {
              callToAction2 && (
                <div class="flex w-full sm:w-auto">
                  {typeof callToAction2 === 'string' ? (
                    <Fragment set:html={callToAction2} />
                  ) : (
                    <a href={callToAction2?.href} target="_blank" rel="noopener" >
                      <img
                        src="https://linkmaker.itunes.apple.com/assets/shared/badges/en-us/appstore-lrg.svg"
                        alt="Download our app from Apple App Store"
                        style="height: auto; width: 25rem;"
                      />
                    </a>
                  )}
                </div>
              )
            }
          </div>
        </div>
        {content && <Fragment set:html={content} />}
      </div>
    </div>
</section>


